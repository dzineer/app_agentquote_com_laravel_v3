(app.agentquote.com) Setting Up Services to run as Linux Boot
——————————————————————————————————————————————

Run command (command line)
——————————————————————————————————————————————

laravel-echo-server start
redis-server /usr/local/etc/redis.conf &
service redis-server status

misc commands

service supervisor restart

supervisorctl reread

supervisorctl update

——————————————————————————————————————————————
Redis Caching Service

Run Redis at startup
/etc/systemd/system/redis.service
——————————————————————————————————————————————

[Unit]
Description=Advanced key-value store
After=network.target
Documentation=http://redis.io/documentation, man:redis-server(1)

[Service]
Type=forking
ExecStart=/usr/bin/redis-server /etc/redis/redis.conf
PIDFile=/var/run/redis/redis-server.pid
TimeoutStopSec=0
Restart=always
User=redis
Group=redis
RuntimeDirectory=redis

ExecStartPre=-/bin/run-parts --verbose /etc/redis/redis-server.pre-up.d
ExecStartPost=-/bin/run-parts --verbose /etc/redis/redis-server.post-up.d
ExecStop=-/bin/run-parts --verbose /etc/redis/redis-server.pre-down.d
ExecStop=/bin/kill -s TERM $MAINPID
ExecStopPost=-/bin/run-parts --verbose /etc/redis/redis-server.post-down.d

UMask=007
PrivateTmp=yes
LimitNOFILE=65535
PrivateDevices=yes
ProtectHome=yes
ReadOnlyDirectories=/
ReadWriteDirectories=-/var/lib/redis
ReadWriteDirectories=-/var/log/redis
ReadWriteDirectories=-/var/run/redis
CapabilityBoundingSet=~CAP_SYS_PTRACE

# redis-server writes its own config file when in cluster mode so we allow
# writing there (NB. ProtectSystem=true over ProtectSystem=full)
ProtectSystem=true
ReadWriteDirectories=-/etc/redis

[Install]
WantedBy=multi-user.target
Alias=redis.service
——————————————————————————————————————————————


Laravel Echo Server 
Run Laravel Echo Server at startup
——————————————————————————————————————————————


1. Find location of certificate and key since we need them for the echo server to be secure
——————————————————————————————————————————————
ssl_certificate /etc/letsencrypt/live/app.agentquote.com/fullchain.pem; # managed by Certbot
ssl_certificate_key /etc/letsencrypt/live/app.agentquote.com/privkey.pem; # managed by Certbot


2. Configure Laravel Echo Server Configuration
laravel-echo-server.json
——————————————————————————————————————————————

{
	"authHost": "http://localhost",
	"authEndpoint": "/broadcasting/auth",
	"clients": [
		{
			"appId": "c3ad6a4a2f91c1b6",
			"key": "ec2998b3b3efc05a222c6fcb2adac71b"
		}
	],
	"database": "redis",
	"databaseConfig": {
		"redis": {},
		"sqlite": {
			"databasePath": "/database/laravel-echo-server.sqlite"
		}
	},
	"devMode": false,
	"host": null,
	"port": "6001",
	"protocol": "https",
	"socketio": {},
	"sslCertPath": "/etc/letsencrypt/live/app.agentquote.com/fullchain.pem",
	"sslKeyPath": "/etc/letsencrypt/live/app.agentquote.com/privkey.pem",
	"sslCertChainPath": "",
	"sslPassphrase": "",
	"subscribers": {
		"http": true,
		"redis": true
	},
	"apiOriginAllow": {
		"allowCors": false,
		"allowOrigin": "",
		"allowMethods": "",
		"allowHeaders": ""
	}
}


3. Run service through pm2 manager
——————————————————————————————————————————————
pm2 start echo-service.json 

4. Tell pm2 to create a service script for current running processe(s) to run at Linux startup
——————————————————————————————————————————————
pm2 startup  — adds the current running processes under pm2 to system startup


Laravel Queue Worker 
1. Run Laravel Queue Worker
——————————————————————————————————————————————
pm2 start artisan --interpreter php --name queue-worker -- queue:work --daemon

2. Tell pm2 to create a service script for current running processe(s) to run at Linux startup
——————————————————————————————————————————————
pm2 startup  — adds the current running processes under pm2 to system startup
