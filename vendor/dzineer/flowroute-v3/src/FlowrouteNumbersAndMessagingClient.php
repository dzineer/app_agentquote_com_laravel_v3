<?php
/*
 * DZFlowroute
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace DZFlowroute;

use DZFlowroute\Controllers;

/**
 * DZFlowroute client class
 */
class FlowrouteNumbersAndMessagingClient
{
    /**
     * Constructor with authentication and configuration parameters
     */
    public function __construct(
        $basicAuthUserName = null,
        $basicAuthPassword = null
    ) {
        Configuration::$basicAuthUserName = $basicAuthUserName ? $basicAuthUserName : Configuration::$basicAuthUserName;
        Configuration::$basicAuthPassword = $basicAuthPassword ? $basicAuthPassword : Configuration::$basicAuthPassword;
    }
    /**
     * Singleton access to Messages controller
     * @return Controllers\MessagesController The *Singleton* instance
     */
    public function getMessages()
    {
        return Controllers\MessagesController::getInstance();
    }
    /**
     * Singleton access to Numbers controller
     * @return Controllers\NumbersController The *Singleton* instance
     */
    public function getNumbers()
    {
        return Controllers\NumbersController::getInstance();
    }
    /**
     * Singleton access to Routes controller
     * @return Controllers\RoutesController The *Singleton* instance
     */
    public function getRoutes()
    {
        return Controllers\RoutesController::getInstance();
    }
    /**
     * Singleton access to the E911 controller
     * @return Controllers\RoutesController The *Singleton* instance
     */
    public function getE911s()
    {
        return Controllers\E911Controller::getInstance();
    }
    /**
     * Singleton access to CNAMs controller
     * @return Controllers\CNAMSController The *Singleton* instance
     */
    public function getCNAMS()
    {
        return Controllers\CNAMController::getInstance();
    }
    /**
     * Singleton access to Porting controller
     * @return Controllers\PortingController The *Singleton* instance
     */
    public function getPorting()
    {
        return Controllers\PortingController::getInstance();
    }
}
